environment:
  fast_finish: true
  pypi_user:
    secure: JqPPu1iW5YANTHA3ie2o9A==
  pypi_pass:
    secure: o55+E9ICiWljWnSSajeGUw==
  matrix:
  - PYTHON: C:\Python27\python.exe
  - PYTHON: C:\Python33\python.exe
  - PYTHON: C:\Python34\python.exe
  - PYTHON: C:\Python35\python.exe

  - PYPY: pypy2-v5.4.0-win32
  - PYPY: pypy2-v5.3.1-win32
  - PYPY: pypy-5.1.1-win32
  - PYPY: pypy-5.0.1-win32
  - PYPY: pypy-4.0.1-win32
  - PYPY: pypy-2.6.1-win32
  - PYPY: pypy-2.5.1-win32
  - PYPY: pypy-2.4.0-win32
  - PYPY: pypy3-2.4.0-win32

install:
- ps: |
    if ($env:PYPY){
        $env:PYTHON = 'C:\' + $env:PYPY + '\pypy.exe'
        $env:PATH += ';' + 'C:\' + $env:PYPY + '\'
        $PYPY_DOWNLOAD = 'https://bitbucket.org/pypy/pypy/downloads/' + $env:PYPY + '.zip'
        Invoke-WebRequest $PYPY_DOWNLOAD -OutFile C:\pypy.zip
        & '7z' x C:\pypy.zip -oC:\
        & $env:PYTHON -m ensurepip
        & $env:PYTHON -m pip install --disable-pip-version-check -U pip
        # manually install a version of wheel with pypy fixes
        & $env:PYTHON -m pip install https://bitbucket.org/pypa/wheel/get/f4d5d07efa60.zip
    }
- ps: "& $env:PYTHON -m pip install cffi wheel twine"
- ps: "& $env:PYTHON -m pip install ."
build_script:
- cmd: "%PYTHON% setup.py bdist_wheel"
test: off
deploy_script:
- if "%APPVEYOR_REPO_TAG%"=="true" ( %PYTHON% -m twine -u %pypi_user% -p %pypi_pass% --skip-existing dist/* )
artifacts:
- path: dist/*
  name: wheel

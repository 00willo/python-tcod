references:
  defaults: &defaults
    docker:
      - image: ubuntu:latest

version: 2
jobs:
  build:
    << : *defaults
    steps:
      - checkout
      - run:
          name: get pyenv
          command: |
            apt-get update && apt-get install -y git
            git clone https://github.com/pyenv/pyenv.git ~/.pyenv
            git clone https://github.com/pyenv/pyenv-virtualenvwrapper.git ~/.pyenv/plugins/pyenv-virtualenvwrapper
            echo 'export PYENV_ROOT="$HOME/.pyenv"' >> $BASH_ENV
            echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> $BASH_ENV
            echo -e 'if command -v pyenv 1>/dev/null 2>&1; then\n  eval "$(pyenv init -)"\nfi' >> ~/.bashrc
            #echo 'eval "$(pyenv init -)"' >> ~/.bashrc
            echo 'pyenv virtualenvwrapper' >> ~/.bashrc
            source $BASH_ENV
            source ~/.bashrc
            set +e
            pyenv versions
            set -e
      - run:
          name: setup pyenv
          command: |
            pyenv install 3.7.0
            pyenv local 3.7.0
      - run:
          name: travis - 1
          command: |
            echo 'export DISPLAY=:99.0' >> $BASH_ENV
      - run:
          name: travis - 2
          command: |
            sh -e /etc/init.d/xvfb start
      - run:
          name: build setup
          command: |
            python -V
            pip install --upgrade pip setuptools
            pip install --pre --upgrade wheel
            pip install -r requirements.txt
      - run:
          name: build
          command: |
            python setup.py build -g develop bdist_wheel
      - run:
          name: test setup
          command: |
            pip install pytest pytest-cov
      - run:
          name: test
          command: |
            pytest -v -rsx
      - run:
          name: post test
          command: |
            pip install codacy-coverage python-coveralls codecov
            codecov
            coveralls
            coverage xml
            ls -ltr

workflows:
  version: 2
  build-test:
    jobs:
     - build

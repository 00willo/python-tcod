references:
  defaults: &defaults
    docker:
      - image: ubuntu:latest

  python36: &python36
    docker:
      - image: circleci/python:3.6-stretch-browsers

  get_pyenv: &get_pyenv
      - run:
          name: get pyenv
          command: |
            apt-get update && apt-get install -y git
            apt-get install -y python-pip  # needed for pyenv-virtualenv to initialise
            git clone https://github.com/pyenv/pyenv.git ~/.pyenv
            git clone https://github.com/pyenv/pyenv-virtualenvwrapper.git ~/.pyenv/plugins/pyenv-virtualenvwrapper
            echo 'export PYENV_ROOT="$HOME/.pyenv"' >> $BASH_ENV
            echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> $BASH_ENV
            #echo -e 'if command -v pyenv 1>/dev/null 2>&1; then\n  eval "$(pyenv init -)"\nfi' >> ~/.bashrc
            echo 'eval "$(pyenv init -)"' >> ~/.bashrc
            echo 'pyenv virtualenvwrapper' >> ~/.bashrc
            source $BASH_ENV
            source ~/.bashrc
            pyenv versions      # should show system python at least

  download_pyenv: &download_pyenv
    run:
      name: Download pyenv
      command: |
        set +e
        pyenv versions || { echo "pyenv not present, installing"; \
            git clone https://github.com/pyenv/pyenv.git ~/.pyenv; \
            git clone https://github.com/pyenv/pyenv-virtualenvwrapper.git ~/.pyenv/plugins/pyenv-virtualenvwrapper; \
            }
        set -e

  update_pip: &update_pip
    run:
      name: Update pip
      command: |
        pip install --upgrade pip
        pip install --upgrade setuptools

  configure_pyenv: &configure_pyenv
    run:
      name: Configure pyenv
      command: |
        echo 'export PYENV_ROOT="$HOME/.pyenv"' >> $BASH_ENV
        echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> $BASH_ENV
        echo 'eval "$(pyenv init -)"' >> ~/.bashrc
        echo 'pyenv virtualenvwrapper' >> ~/.bashrc
        source $BASH_ENV
        source ~/.bashrc
        pyenv versions

  build_setup: &build_setup
    run:
      name: Build setup
      command: |
        # pyenv version
        sudo apt-get install gcc python-dev python3-dev libsdl2-dev libffi-dev libomp5
        python -V
        python3 -m venv project-env
        source project-env/bin/activate
        pip install --upgrade pip setuptools
        pip install --pre --upgrade wheel
        pip install -r requirements.txt

  build_package: &build_package
    run:
      name: build
      command: |
        source project-env/bin/activate
        python -V
        export
        git submodule update --init --recursive
        python setup.py build -g develop bdist_wheel

  setup_test: &setup_test
    run:
      name: test setup
      command: |
        pip install pytest pytest-cov

  test: &test
    run:
      name: test
      command: |
        pytest -v -rsx

  post_test: &post_test
    run:
      name: post test
      command: |
        pip install codacy-coverage python-coveralls codecov
        codecov
        coveralls
        coverage xml
        ls -ltr

version: 2
jobs:
  build-py36:
    << : *python36
    steps:
      - checkout
      - << : *build_setup
      - << : *build_package
      - << : *setup_test
      - << : *test
      - << : *post_test

  build:
    << : *defaults
    steps:
      - checkout
      - run:
          name: get pyenv
          command: |
            apt-get update && apt-get install -y git
            apt-get install -y python-pip  # needed for pyenv-virtualenv to initialise
            git clone https://github.com/pyenv/pyenv.git ~/.pyenv
            git clone https://github.com/pyenv/pyenv-virtualenvwrapper.git ~/.pyenv/plugins/pyenv-virtualenvwrapper
            echo 'export PYENV_ROOT="$HOME/.pyenv"' >> $BASH_ENV
            echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> $BASH_ENV
            #echo -e 'if command -v pyenv 1>/dev/null 2>&1; then\n  eval "$(pyenv init -)"\nfi' >> ~/.bashrc
            echo 'eval "$(pyenv init -)"' >> ~/.bashrc
            echo 'pyenv virtualenvwrapper' >> ~/.bashrc
            source $BASH_ENV
            source ~/.bashrc
            pyenv versions      # should show system python at least
      - run:
          name: setup to build
          command: |
            echo $PATH
            echo $PYENV_ROOT
            DEBIAN_FRONTEND=noninteractive apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev \
              libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev xz-utils \
              tk-dev libxml2-dev libxmlsec1-dev libffi-dev
      - run:
          name: setup pyenv
          command: |
            source ~/.bashrc
            apt-get install -y wget     # for pyenv to download python
            pyenv install 3.7.0
            pyenv versions
      - run:
          name: travis - 1
          command: |
            echo 'export DISPLAY=:99' >> $BASH_ENV
      - run:
          name: travis - 2
          command: |
            apt-get install -y xvfb
            /usr/bin/Xvfb :99 -ac -screen 0 1024x768x24 & > /dev/null 2>&1
      - run:
          name: build setup
          command: |
            source $BASH_ENV
            source ~/.bashrc
            pyenv versions
            pyenv version
            python -V
            export
            pyenv local 3.7.0
            pyenv version
            python -V
            pyenv global 3.7.0
            pyenv version
            python -V
            pip install --upgrade pip setuptools
            pip install --pre --upgrade wheel
            pip install -r requirements.txt
      - run:
          name: build
          command: |
            source ~/.bashrc
            python -V
            export
            python setup.py build -g develop bdist_wheel
      - run:
          name: test setup
          command: |
            source ~/.bashrc
            pip install pytest pytest-cov
      - run:
          name: test
          command: |
            source ~/.bashrc
            pytest -v -rsx
      - run:
          name: post test
          command: |
            source ~/.bashrc
            pip install codacy-coverage python-coveralls codecov
            codecov
            coveralls
            coverage xml
            ls -ltr

workflows:
  version: 2
  build-test:
    jobs:
      - build-py36
      - build
